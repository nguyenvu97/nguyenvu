// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231208124256_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Model.Department", b =>
                {
                    b.Property<int>("roomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("roomAddrees")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("roomName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("roomNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("roomId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("API.Model.Employee", b =>
                {
                    b.Property<int>("staddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("roomId")
                        .HasColumnType("int");

                    b.Property<string>("staffName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("staddId");

                    b.ToTable("staffs");
                });

            modelBuilder.Entity("API.Model.Oder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OderDetail_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("payment")
                        .HasColumnType("double");

                    b.HasKey("OrderId");

                    b.HasIndex("OderDetail_id");

                    b.HasIndex("UserId");

                    b.ToTable("Oders");
                });

            modelBuilder.Entity("API.Model.OderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("PriceTotal")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("OderDetails");
                });

            modelBuilder.Entity("API.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("API.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("API.Model.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<string>("idCard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("WalletId");

                    b.HasIndex("Userid")
                        .IsUnique();

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("OderDetailProduct", b =>
                {
                    b.Property<int>("OderDetailsid")
                        .HasColumnType("int");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("OderDetailsid", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OderDetailProduct", (string)null);
                });

            modelBuilder.Entity("API.Model.Oder", b =>
                {
                    b.HasOne("API.Model.OderDetail", "OderDetail")
                        .WithMany()
                        .HasForeignKey("OderDetail_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OderDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Model.Wallet", b =>
                {
                    b.HasOne("API.Model.User", "user")
                        .WithOne("Wallet")
                        .HasForeignKey("API.Model.Wallet", "Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("OderDetailProduct", b =>
                {
                    b.HasOne("API.Model.OderDetail", null)
                        .WithMany()
                        .HasForeignKey("OderDetailsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Model.User", b =>
                {
                    b.Navigation("Wallet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
